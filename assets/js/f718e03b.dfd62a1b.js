"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["84214"],{63055:function(e,t,i){i.r(t),i.d(t,{metadata:()=>a,contentTitle:()=>g,default:()=>x,assets:()=>y,toc:()=>f,frontMatter:()=>h});var a=JSON.parse('{"id":"api/v2024/list-seds","title":"list-seds","description":"<Heading","source":"@site/docs/api/v2024/list-seds.api.mdx","sourceDirName":"api/v2024","slug":"/api/v2024/list-seds","permalink":"/docs/api/v2024/list-seds","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to \'List Suggested Entitlement Descriptions\' (list-seds)","tags":[],"version":"current","frontMatter":{"id":"list-seds","sidebar_label":"List Suggested Entitlement Descriptions","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"get api-method","info_path":"docs/api/v2024/identity-security-cloud-v-2024-api","custom_edit_url":"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to \'List Suggested Entitlement Descriptions\' (list-seds)"},"sidebar":"isc_2024_sidebar","previous":{"title":"Submit Sed Assignment Request","permalink":"/docs/api/v2024/submit-sed-assignment"},"next":{"title":"Patch Suggested Entitlement Description","permalink":"/docs/api/v2024/patch-sed"}}'),s=i("85893"),n=i("50065"),r=i("47936"),o=i("44039"),l=i.n(o),d=i("40218"),c=i.n(d),p=i("69141"),m=i.n(p);i("61142"),i("5525");var u=i("34403");let h={id:"list-seds",sidebar_label:"List Suggested Entitlement Descriptions",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"docs/api/v2024/identity-security-cloud-v-2024-api",custom_edit_url:"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to 'List Suggested Entitlement Descriptions' (list-seds)"},g=void 0,y={},f=[];function b(e){let t={admonition:"admonition",code:"code",p:"p",strong:"strong",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(u.default,{as:"h1",className:"openapi__heading",children:"List Suggested Entitlement Descriptions"}),"\n",(0,s.jsx)(r.Z,{method:"get",path:"/suggested-entitlement-descriptions",context:"endpoint"}),"\n",(0,s.jsx)(t.admonition,{title:"experimental",type:"warning",children:(0,s.jsxs)(t.p,{children:["This API is currently in an experimental state. The API is subject to change based on feedback and further testing. You must include the X-SailPoint-Experimental header and set it to ",(0,s.jsx)(t.code,{children:"true"})," to use this endpoint."]})}),"\n",(0,s.jsx)(t.p,{children:"List of Suggested Entitlement Descriptions (SED)"}),"\n",(0,s.jsx)(t.p,{children:"SED field descriptions:"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"batchId"}),": the ID of the batch of entitlements that are submitted for description generation"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"displayName"}),": the display name of the entitlement that we are generating a description for"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"sourceName"}),": the name of the source associated with the entitlement that we are generating the description for"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"sourceId"}),": the ID of the source associated with the entitlement that we are generating the description for"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"status"}),': the status of the suggested entitlement description, valid status options: "requested", "suggested", "not_suggested", "failed", "assigned", "approved", "denied"']}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"fullText"}),": will filter suggested entitlement description records by text found in any of the following fields: entitlement name, entitlement display name, suggested description, source name"]}),"\n",(0,s.jsx)(u.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,s.jsx)(l(),{parameters:[{description:"Integer specifying the maximum number of records to return in a single API call. \nThe standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used.",schema:{format:"int64",type:"integer"},in:"query",name:"limit",example:"limit=25"},{description:"Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**batchId**: *eq, ne*\n\n**displayName**: *eq, ne, co*\n\n**sourceName**: *eq, ne, co*\n\n**sourceId**: *eq, ne*\n\n**status**: *eq, ne*\n\n**fullText**: *co*",in:"query",name:"filters",example:'displayName co "Read and Write"',schema:{type:"string"}},{description:"Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **displayName, sourceName, status**",in:"query",name:"sorters",example:"sorters=displayName",schema:{type:"string"}},{description:"If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored. \nThe standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results).\nSince requesting a total count can have a performance impact, it is recommended not to send `count=true` if that value will not be used.",in:"query",name:"count",example:"count=true",schema:{type:"boolean"}},{description:"If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored.\nThis parameter differs from the Coun parameter in that this one skip executing the actual query and always return an empty array.",in:"query",name:"count-only",example:"count-only=true",schema:{type:"boolean"}},{description:"By default, the ListSeds API will only return items that you have requested to be generated.  \nThis option will allow you to see all items that have been requested",in:"query",name:"requested-by-anyone",example:"requested-by-anyone=true",schema:{type:"boolean"}},{description:'Will limit records to items that are in "suggested" or "approved" status',in:"query",name:"show-pending-status-only",example:"show-pending-status-only=true",schema:{type:"boolean"}},{name:"X-SailPoint-Experimental",in:"header",description:"Use this header to enable this experimental API.",example:!0,schema:{type:"string",default:!0},required:!0}]}),"\n",(0,s.jsx)(c(),{title:"Body",body:void 0}),"\n",(0,s.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"List of Suggested Entitlement Details",content:{"application/json":{schema:{items:{description:"Suggested Entitlement Description",type:"object",properties:{Name:{type:"string",description:"name of the entitlement",example:"BatchInvoiceProcessing"},approved_by:{type:"string",description:"entitlement approved by",example:"2c918086-76de-afbf-0176-f6d28f65565a"},approved_type:{type:"string",description:"entitlement approved type",example:"admin"},approved_when:{format:"date-time",type:"string",example:"2024-03-22 16:32:16.308857",description:"entitlement approved then"},attribute:{type:"string",description:"entitlement attribute",example:"Role"},description:{type:"string",description:"description of entitlement",example:"This entitlement allows automated processing of invoices in batches on a scheduled basis to streamline accounts payable procedures."},displayName:{type:"string",description:"entitlement display name",example:"AWS-Cloud-Billing"},id:{format:"uuid",type:"string",description:"sed id",example:"ead281ee-12a9-40ac-9534-36b5d7d65d53"},sourceId:{type:"string",description:"entitlement source id",example:"103f567b93ee49b991c40f9412f87643"},sourceName:{type:"string",description:"entitlement source name",example:"IDN Salesforce"},status:{type:"string",description:"entitlement status",example:"suggested"},suggestedDescription:{type:"string",description:"llm suggested entitlement description",example:"This entitlement allows automated processing of invoices in batches on a scheduled basis to streamline accounts payable"},type:{type:"string",description:"entitlement type",example:"group"},value:{type:"string",description:"entitlement value",example:"group"}},title:"Sed"},type:"array"}}}},400:{description:"Client Error - Returned if the request body is invalid.",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"}}}},401:{description:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",content:{"application/json":{schema:{type:"object",properties:{error:{description:"A message describing the error",example:"JWT validation failed: JWT is expired"}}}}}},403:{description:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"},examples:{403:{summary:"An example of a 403 response object",value:{detailCode:"403 Forbidden",trackingId:"b21b1f7ce4da4d639f2c62a57171b427",messages:[{locale:"en-US",localeOrigin:"DEFAULT",text:"The server understood the request but refuses to authorize it."}]}}}}}},404:{description:"Not Found - returned if the request URL refers to a resource or object that does not exist",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"},examples:{404:{summary:"An example of a 404 response object",value:{detailCode:"404 Not found",trackingId:"b21b1f7ce4da4d639f2c62a57171b427",messages:[{locale:"en-US",localeOrigin:"DEFAULT",text:"The server did not find a current representation for the target resource."}]}}}}}},429:{description:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",content:{"application/json":{schema:{type:"object",properties:{message:{description:"A message describing the error",example:" Rate Limit Exceeded "}}}}}},500:{description:"Internal Server Error - Returned if there is an unexpected error.",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"},examples:{500:{summary:"An example of a 500 response object",value:{detailCode:"500.0 Internal Fault",trackingId:"b21b1f7ce4da4d639f2c62a57171b427",messages:[{locale:"en-US",localeOrigin:"DEFAULT",text:"An internal fault occurred."}]}}}}}}}})]})}function x(e={}){let{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(b,{...e})}):b(e)}}}]);