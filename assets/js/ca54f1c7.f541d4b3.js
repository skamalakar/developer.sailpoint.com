"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["19411"],{92330:function(e,t,i){i.r(t),i.d(t,{metadata:()=>a,contentTitle:()=>g,default:()=>T,assets:()=>y,toc:()=>f,frontMatter:()=>h});var a=JSON.parse('{"id":"api/v3/list-non-employee-records","title":"list-non-employee-records","description":"<Heading","source":"@site/docs/api/v3/list-non-employee-records.api.mdx","sourceDirName":"api/v3","slug":"/api/v3/list-non-employee-records","permalink":"/docs/api/v3/list-non-employee-records","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to \'List Non-Employee Records\' (list-non-employee-records)","tags":[],"version":"current","frontMatter":{"id":"list-non-employee-records","sidebar_label":"List Non-Employee Records","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"get api-method","info_path":"docs/api/v3/identity-security-cloud-v-3-api","custom_edit_url":"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to \'List Non-Employee Records\' (list-non-employee-records)"},"sidebar":"isc_v3_sidebar","previous":{"title":"Create Non-Employee Record","permalink":"/docs/api/v3/create-non-employee-record"},"next":{"title":"Get a Non-Employee Record","permalink":"/docs/api/v3/get-non-employee-record"}}'),o=i("85893"),r=i("50065"),s=i("47936"),n=i("44039"),l=i.n(n),c=i("40218"),d=i.n(c),p=i("69141"),m=i.n(p);i("61142"),i("5525");var u=i("34403");let h={id:"list-non-employee-records",sidebar_label:"List Non-Employee Records",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"docs/api/v3/identity-security-cloud-v-3-api",custom_edit_url:"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to 'List Non-Employee Records' (list-non-employee-records)"},g=void 0,y={},f=[];function x(e){let t={code:"code",li:"li",ol:"ol",p:"p",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(u.default,{as:"h1",className:"openapi__heading",children:"List Non-Employee Records"}),"\n",(0,o.jsx)(s.Z,{method:"get",path:"/non-employee-records",context:"endpoint"}),"\n",(0,o.jsx)(t.p,{children:"This gets a list of non-employee records. There are two contextual uses for this endpoint:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["The user has the role context of ",(0,o.jsx)(t.code,{children:"idn:nesr:read"}),", in which case they can get a list of all of the non-employees."]}),"\n",(0,o.jsx)(t.li,{children:"The user is an account manager, in which case they can get a list of the non-employees that they manage."}),"\n"]}),"\n",(0,o.jsx)(u.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,o.jsx)(l(),{parameters:[{in:"query",name:"limit",description:"Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.",required:!1,example:250,schema:{type:"integer",format:"int32",minimum:0,maximum:250,default:250}},{in:"query",name:"offset",description:"Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.",required:!1,example:0,schema:{type:"integer",format:"int32",minimum:0,default:0}},{in:"query",name:"count",description:"If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.",required:!1,example:!0,schema:{type:"boolean",default:!1}},{in:"query",name:"sorters",required:!1,schema:{type:"string",format:"comma-separated"},example:"accountName,sourceId",description:"Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id, accountName, sourceId, manager, firstName, lastName, email, phone, startDate, endDate, created, modified**"},{in:"query",name:"filters",required:!1,schema:{type:"string"},example:'sourceId eq "2c91808568c529c60168cca6f90c1313"',description:"Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**sourceId**: *eq*"}]}),"\n",(0,o.jsx)(d(),{title:"Body",body:void 0}),"\n",(0,o.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"Non-Employee record objects",content:{"application/json":{schema:{type:"array",items:{type:"object",properties:{id:{type:"string",format:"UUID",description:"Non-Employee record id.",example:"ef38f94347e94562b5bb8424a56397d8"},accountName:{type:"string",description:"Requested identity account name.",example:"Abby.Smith"},firstName:{type:"string",description:"Non-Employee's first name.",example:"William"},lastName:{type:"string",description:"Non-Employee's last name.",example:"Smith"},email:{type:"string",description:"Non-Employee's email.",example:"william.smith@example.com"},phone:{type:"string",description:"Non-Employee's phone.",example:"5125555555"},manager:{type:"string",description:"The account ID of a valid identity to serve as this non-employee's manager.",example:"jane.doe"},sourceId:{type:"string",description:"Non-Employee's source id.",example:"2c91808568c529c60168cca6f90c1313"},data:{type:"object",additionalProperties:{type:"string"},description:"Additional attributes for a non-employee. Up to 10 custom attributes can be added.",example:{description:"Auditing"}},startDate:{type:"string",format:"date-time",description:"Non-Employee employment start date.",example:"2019-08-23T18:52:59.162Z"},endDate:{type:"string",format:"date-time",description:"Non-Employee employment end date.",example:"2020-08-23T18:52:59.162Z"},modified:{type:"string",format:"date-time",description:"When the request was last modified.",example:"2019-08-23T18:52:59.162Z"},created:{type:"string",format:"date-time",description:"When the request was created.",example:"2019-08-23T18:40:35.772Z"}},title:"NonEmployeeRecord"}}}}},400:{description:"Client Error - Returned if the request body is invalid.",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"}}}},401:{description:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",content:{"application/json":{schema:{type:"object",properties:{error:{description:"A message describing the error",example:"JWT validation failed: JWT is expired"}}}}}},403:{description:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"},examples:{403:{summary:"An example of a 403 response object",value:{detailCode:"403 Forbidden",trackingId:"b21b1f7ce4da4d639f2c62a57171b427",messages:[{locale:"en-US",localeOrigin:"DEFAULT",text:"The server understood the request but refuses to authorize it."}]}}}}}},429:{description:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",content:{"application/json":{schema:{type:"object",properties:{message:{description:"A message describing the error",example:" Rate Limit Exceeded "}}}}}},500:{description:"Internal Server Error - Returned if there is an unexpected error.",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"},examples:{500:{summary:"An example of a 500 response object",value:{detailCode:"500.0 Internal Fault",trackingId:"b21b1f7ce4da4d639f2c62a57171b427",messages:[{locale:"en-US",localeOrigin:"DEFAULT",text:"An internal fault occurred."}]}}}}}}}})]})}function T(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(x,{...e})}):x(e)}}}]);