"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["59529"],{40567:function(e,s,a){a.r(s),a.d(s,{metadata:()=>r,contentTitle:()=>l,default:()=>p,assets:()=>o,toc:()=>d,frontMatter:()=>t});var r=JSON.parse('{"id":"extensibility/transforms/operations/display-name","title":"Display Name","description":"Use Preferred Name over Given Name to create an identity\u2019s Display Name.","source":"@site/docs/extensibility/transforms/operations/display-name.md","sourceDirName":"extensibility/transforms/operations","slug":"/extensibility/transforms/operations/display-name","permalink":"/docs/extensibility/transforms/operations/display-name","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer-community-site/edit/main/docs/extensibility/transforms/operations/display-name.md","tags":[{"inline":true,"label":"Transforms","permalink":"/docs/tags/transforms"},{"inline":true,"label":"Transform Operations","permalink":"/docs/tags/transform-operations"}],"version":"current","lastUpdatedBy":"GitHub Action Bot","lastUpdatedAt":1733246545000,"frontMatter":{"id":"display-name","title":"Display Name","pagination_label":"Display Name","sidebar_label":"Display Name","sidebar_class_name":"displayName","keywords":["transforms","operations","display","name"],"description":"Use Preferred Name over Given Name to create an identity\u2019s Display Name.","slug":"/extensibility/transforms/operations/display-name","tags":["Transforms","Transform Operations"]},"sidebar":"openApiSidebar","previous":{"title":"Decompose Diacritial Marks","permalink":"/docs/extensibility/transforms/operations/decompose-diacritical-marks"},"next":{"title":"E.164 Phone","permalink":"/docs/extensibility/transforms/operations/e164-phone"}}'),i=a("85893"),n=a("50065");let t={id:"display-name",title:"Display Name",pagination_label:"Display Name",sidebar_label:"Display Name",sidebar_class_name:"displayName",keywords:["transforms","operations","display","name"],description:"Use Preferred Name over Given Name to create an identity\u2019s Display Name.",slug:"/extensibility/transforms/operations/display-name",tags:["Transforms","Transform Operations"]},l=void 0,o={},d=[{value:"Overview",id:"overview",level:2},{value:"Transform Structure",id:"transform-structure",level:2},{value:"Attributes",id:"attributes",level:2},{value:"Examples",id:"examples",level:2}];function m(e){let s={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(s.p,{children:["The transform forms an identity\u2019s ",(0,i.jsx)(s.code,{children:"Display Name"})," value using the ",(0,i.jsx)(s.code,{children:"Preferred Name"})," value when it exists over the ",(0,i.jsx)(s.code,{children:"Given Name"})," (first name) value. The ",(0,i.jsx)(s.code,{children:"Family Name"})," (last name) value is then appended to form the complete ",(0,i.jsx)(s.code,{children:"Display Name"}),', e.g., ("Preferred Name" or "Given Name") + "Family Name"']}),"\n",(0,i.jsx)(s.h2,{id:"transform-structure",children:"Transform Structure"}),"\n",(0,i.jsx)(s.p,{children:"The displayName generator transform is intended for using Preferred Name over Given Name to create an identity\u2019s Display Name."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "name": "Display Name Transform",\n  "type": "displayName",\n  "attributes": {\n    "input": "input"\n  }\n}\n'})}),"\n",(0,i.jsx)(s.h2,{id:"attributes",children:"Attributes"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Required Attributes"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"type"})," - This must always be set to ",(0,i.jsx)(s.code,{children:"displayName"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"name"})," - This is a required attribute for all transforms. It represents the name of the transform as it will appear in the UI's dropdown menus."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"attributes"})," - The attributes key must be included and not null for the transform to work properly."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(s.p,{children:"This transform takes the user's Preferred Name or Given Name, and appends the user's Family Name. For example:"}),"\n",(0,i.jsxs)(s.p,{children:["If the user's Preferred Name is  ",(0,i.jsx)(s.code,{children:"John"}),", Given Name is ",(0,i.jsx)(s.code,{children:"Jonathan"}),", and Family Name is ",(0,i.jsx)(s.code,{children:"Doe"}),", the Display Name would be ",(0,i.jsx)(s.code,{children:"John Doe"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["If the user's Preferred Name is not set, Given Name is ",(0,i.jsx)(s.code,{children:"Jonathan"}),", and Family Name is ",(0,i.jsx)(s.code,{children:"Doe"}),", the Display Name would be ",(0,i.jsx)(s.code,{children:"Jonathan Doe"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Transform Request Body"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "name": "Display Name Transform",\n  "type": "displayName",\n  "attributes": {\n    "input": "input"\n  }\n}\n'})})]})}function p(e={}){let{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}}}]);