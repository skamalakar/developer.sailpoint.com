"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["86017"],{55659:function(e,r,s){s.r(r),s.d(r,{metadata:()=>t,contentTitle:()=>i,default:()=>c,assets:()=>a,toc:()=>d,frontMatter:()=>l});var t=JSON.parse('{"id":"tools/sdk/powershell/powershell-sdk-error-handling","title":"Error Handling with the PowerShell SDK","description":"Learn how to delete resources using the PowerShell SDK in this guide.","source":"@site/docs/tools/sdk/powershell/error-handling.md","sourceDirName":"tools/sdk/powershell","slug":"/tools/sdk/powershell/error-handling","permalink":"/docs/tools/sdk/powershell/error-handling","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer-community-site/edit/main/docs/tools/sdk/powershell/error-handling.md","tags":[{"inline":true,"label":"SDK","permalink":"/docs/tags/sdk"}],"version":"current","lastUpdatedBy":"GitHub Action Bot","lastUpdatedAt":1733246545000,"sidebarPosition":7,"frontMatter":{"id":"powershell-sdk-error-handling","title":"Error Handling with the PowerShell SDK","pagination_label":"PowerShell SDK","sidebar_label":"Error Handling","sidebar_position":7,"sidebar_class_name":"powershellsdk","keywords":["powershell","sdk","error"],"description":"Learn how to delete resources using the PowerShell SDK in this guide.","slug":"/tools/sdk/powershell/error-handling","tags":["SDK"]},"sidebar":"openApiSidebar","previous":{"title":"PowerShell SDK","permalink":"/docs/tools/sdk/powershell/retries"},"next":{"title":"Python SDK","permalink":"/docs/tools/sdk/python"}}'),o=s("85893"),n=s("50065");let l={id:"powershell-sdk-error-handling",title:"Error Handling with the PowerShell SDK",pagination_label:"PowerShell SDK",sidebar_label:"Error Handling",sidebar_position:7,sidebar_class_name:"powershellsdk",keywords:["powershell","sdk","error"],description:"Learn how to delete resources using the PowerShell SDK in this guide.",slug:"/tools/sdk/powershell/error-handling",tags:["SDK"]},i=void 0,a={},d=[];function h(e){let r={code:"code",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.p,{children:"The SDK uses the Invoke-WebRequest cmdlet to handle HTTP requests. Invoke-WebRequest will throw a terminating error for any response that falls out of the range of 2xx. A non-2xx response will immediately halt the program and produce a stack trace."}),"\n",(0,o.jsxs)(r.p,{children:["You can use a ",(0,o.jsx)(r.code,{children:"try/catch"})," function to intercept any non success response and take actions on the results, such as logging the message or performing additional actions before exiting the program:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-powershell",children:'# Catch any non 2xx response and log the status code and error message\ntry {\n    Get-Transforms -Filters "id eq"\n}\ncatch {\n    Write-Host $_.Exception.Response.StatusCode.value__\n    Write-Host $_.ErrorDetails\n}\n'})}),"\n",(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"catch"})," block will handle the error, and the script execution will continue. If you want to stop the scripts execution, include an ",(0,o.jsx)(r.code,{children:"Exit"})," in the ",(0,o.jsx)(r.code,{children:"catch"})," block:"]}),"\n",(0,o.jsxs)(r.p,{children:["This code ensures that the ",(0,o.jsx)(r.code,{children:"Get-AccessProfiles"})," cmdlet will never be called:"]}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-powershell",children:'# Catch any non 2xx response and log the status code and error message. Stop the script with the Exit keyword.\ntry {\n    Get-Transforms -Filters "id eq"\n}\ncatch {\n    Write-Host $_.Exception.Response.StatusCode.value__\n    Write-Host $_.ErrorDetails\n    Exit\n}\n\nGet-AccessProfiles\n'})})]})}function c(e={}){let{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);