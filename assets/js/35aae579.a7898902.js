"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["19664"],{21010:function(e,t,i){i.r(t),i.d(t,{metadata:()=>a,contentTitle:()=>g,default:()=>b,assets:()=>y,toc:()=>f,frontMatter:()=>h});var a=JSON.parse('{"id":"api/v2024/list-non-employee-records","title":"list-non-employee-records","description":"<Heading","source":"@site/docs/api/v2024/list-non-employee-records.api.mdx","sourceDirName":"api/v2024","slug":"/api/v2024/list-non-employee-records","permalink":"/docs/api/v2024/list-non-employee-records","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to \'List Non-Employee Records\' (list-non-employee-records)","tags":[],"version":"current","frontMatter":{"id":"list-non-employee-records","sidebar_label":"List Non-Employee Records","hide_title":true,"hide_table_of_contents":true,"api":"eJztXHtz2zYS/yoY9o/GGlGWZMm2NHMz5zpJ607S+Pxobs7JtBAJSUgogAHI2DqPv/vtLkCKtCS/knaanjrTRiGB3cU+fwsCvQ50KgzPpFZHcTAMEmmzX7R6MUsTPRfiRETaxDZoBlZEuZHZPBheXAe5FeYgz6bwl/c375tBxicWfgcwMyymsldyLKJ5lAj2mis+ETOhsgAGx8JGRqbIEhieTaVlE5FZxhkyZ3rMFJARBRnjRGixs6kwgnH4N7vULNIqE1dZzhMG0lg21oZlSEuoONVSZcN3irEOTcMRhk25hRFAUINIfjpy+13GaqiENUMjePx7k0nFLqcymrKIW4FT5vBLoZAVGXmS4B9IsCqubSHbboUtiASTeRTpXGVsRqowD2SyRB2e8MyNdpRaYJqUGz4TmTCWjCNRrZ9yYebwTsEbMutMZsFt3b/mV0zlsxFICcyMsHkCdsg0/Mxyo2App2CAi1932MHxETvNuIq5idmhThIRIQ12XLJ+/2yaZakdbm/H4rNI0KtalsuEbNGK9Gwb1LzNU7ltPZ0wKumEiyVskSVnGswsFfyckW/iMo34lEsjwEvHPLGiGYgrDnqB5XX7bXDQaCpmPBheB9k8xTUDXwGqhpmOjHu004UHM6nkLJ8FQ5g341fuN1GJxZiDFuhvNzfN1drU47EVy+p8Q49BbNAgWm6cg484rTJ40WLnFtw1mTObikiOpYjZpcymrEHWaaDiUz6RimfoEEbnk6lzWGeYb8YcX2CMUv3rlU9xtKT7ozFrZCYXDSYz0CooPtVpnjhVCtb4d3imM56Ehzi7gSpNtYLAm0LIg/uTHSjalsMBI+5S50nMRsJHBlhOjku7gf5Yw/lEg11ikpITBRqLwWJgM6kinAfLsJlUEwjvDEVhLiFg0E/5Z0hsDGxEysHxcpbyKGviaiCBYA6cQf6MgbHSGXqKFci1QUT+QStvoEwk7Wee5MJpAUePKBN5ab4JD8L1rHCikYbUzVVQ8ROaudZXrDaUFlfwWiJuMwPWqToo6pyHVuBaMph6U5Ew8An9F2DUtDo3kYD6edsrT4F/6Ui5ReujkxUKY3auMsjBbtIIvUr9ydb5DlUEcoVeyi1yEvcMPc/maYpKjH2BhawGZPQlvoYMlsR2CF4o4yarKoQVGmkuCt5YGuvfJrz4BSaQSZOlU61wVsZN9hx03cQq7n5EUJSBPRDSMeXMRiNYZ+6xTB5r7ppNC6mZ+MTeBd1o0Nlv7/d396N+dxDttjvwK+K740E76ux0dt4FS/Z+SQL8xS3utHTb5i+Lpw+zOiU9Bx21sUOk0GgU+ms0wCnEJzDUezSFS7UWld9tt/GPutZqqNHBPaZHH0ByNCUhNcj4MI2naSIjyh/bHyzOvV42LDeGo0/ITMxs5bmjiHDJoNyZdBLJ+M4ccH5+9HzJzKsEljGmtIUvifHO/njQ2+ntiUGvv9sd9Uej/V63x/u7O4O9eB89rxIyq4SoMz1xFQRdJgZ9ABQvQSW6f537wWg0b51CdZoinzL07udSXdr31gXtCvpvobZIPkPiRTA/mjZOXEG6lJpyw6Op0qw6xUsnbMsi5X/65xgxyIVSz6O50Kw6l36n23f/IFmf9u4njH1CYcej59RZYP2WFTNTtTcIEaxrcaotAQjjedXF+cBBwFgLFKasT49dppu45Nv3ZUbkGfOMr4o+HscSmfHkuBaHS2m5LthBOY3xDMaM8sw3fbymDgDZKSqs02ZRbjM9qw5HrAVgCEQQ9RXdzkgHOXJDOVB7RVW6M1HAekWYSYiDO7OFkxNbYVftGM67pd12ZxC298Puzllnf9jvDvuDVme3+x+KCVcWv7IkCCVXydFtr5OjKMZPFOTtVCjf2lBSY5fc54OC8MNV4gHC15TEk7xLhl57uNNv7e2hDCAExCkNWto6gbc3OKC3qvAdJhLV/8IY8OOQnVR6i6pIIx3PsSpLRYmh9YSiuKb4xSKDbHmo4wdkwJdSiXBiuEQJBYkcwUQGFD/LGJEBYXxHsti8oHF1PYImWh32A4+Zr2gAd9xiUI+GRx+B1kNy1bmSMJ8VUyBLlWhlBVuxJ/hotz3o9sa7Pc67+73OXn80GPOdnfagPxiQVwtrIZPaFWiizvpHoQArRSzREVjkv6AQ8BjQPQlAzB8OQIjGA/SPhcKNLZfp5WW4kwUAnP1weMx6exBIapLTcz65pQQVnp8iXs6ThI+KTguLOBF+Y+REqlWiCIUN+kXw/MXLg/NXZ/Dk5MW/zl+cwi+ktbSrd6DAW2N0S03N9FRfksR+ARhkViA2hShjDU+1AQviylYHSvc3OwfgM2O+64MZnvuKGVXSbGygAFRDqdj2eyZbotWEYoAph2fRlI04tMhMu2TQOIgikWbhK6/Jht8n2GqxSiGiNhvL77ysKgjn3dYPhLKgbQWdZ9iFy+hWel2osm6NRTJ5VTUKBgdIfr+fHES0KVrsbpbhUHqLF9HbB2R2mqtLd3YrJVLfAq1ERBtYkNkA9kJmgrVJaHR8OqLWARKPKsaVGauaIyndvXbCPM80vYt4bh8Qd8cJpJ+Qlla++Cx88NHOpctGZI3CTD4j+U05muxHleYqAt81N5vY3cTuJnYfGLu3X574dt+/JejTWYY+54rnoF9DxXMJ+hjyHqVZMYjgjTdkk4FCPET6+e0ZBPZHwHD45ecqxT2fr4iPXClfbg9Ke/h9nGKbpyj9C1uggKRHt4IxZCIRD0nuhcQOJJKqdpa5vdRmJMFB1QqISF+Y5jqnz2ImV4o2mG2TQedn1feZ31qGiLDWZUD3hSx0u0YbJLlBkptqtKlGf5tqtEGSm9jdxO63Gbt3IslSKooWj5NsPptxM3ee5t+7HXQYsPjGX4Ycmeo2WkFirMRYQR05BKNuZ9QZ70WiF/NevLszGHej3S7v73X2OqNedy+o1vqLRRyXQVaPqYq9nR1JxbS7b1iuwLlspnVc3/7L8RvymE45ZQtIDLYDAHfzvsSO3cEydjzTGk9fzQuEZGsYUi10hDkNxs5wrCnGwgDOJpAXFZ5NkCAXupKcCaCCn8QZHYDA4MVVAF0zDw/G+AXUH6uQxd6q5yJVlOQgIWWCRCNq1uBYEs8ojBHzAQVCsBPIzl8RnXoTfRGSZye44le4YvbiKhICA71E7v1V+7tHILzBHHHqDLxmo9d1O1yBA0BD4HJWiTs3+HyDzzc1flPj/x41foPPN7G7id1vM3Yfgc89GlqPz2HAg/E5jG21WYmlXtLBzz8bplOoeAnIvZmOotzQdnOBwQlXgCuhQBM6H55yvCMRbFdPqISmcqcCYaGTKDcJjCyO+F2DocBANy2eylZxEEjpSzrn97nb7vZWZB48IuCiDHJXnLsDhHiw0PFpkYaNRCd2GY94OH3747RBeaLwTvp4agsNOdc55Dgi02Tg8N6h6DFImkI38b31Z7xu6JTurWXC8s5NcvOAJf2KI+5ajSO1ZjWr9HgnOxjPQNZbi8RFvF/chTlF8O24L27ELCoJdmp4wP0qjKVNEz53x+SCY7A5paYDty9/hh8wlqR5g+S67AfBDbQO7iPHs5/fnm2xCWJSygnugKmQ2ERAVF2kBeVyx59mHR+cbd1/fDTWkaXzoyi3oOxArcZ3Bb+QhwWD0DEIicEWo0q3uLBwUf9sQ83DONGXXyCDz3I1viEm7rDGK0Re2LuoLESOW3To/XiVWix9M+HW6kiSMukOAPeXdhQ7Ko7fnXprs8NE5zEdfDUiAVxQ1CGcAW5+QTMTXFlloTrK8YyVO/ReX6zl3G5PRZJu40lzWCUSsNuQ8sVVa5rNki32DH5BMZtJ1WQ/wUhwkY9NJrKotYUwJ8YTvfASbw9gaXTcKcXSShdH/tet5gTqM0XVQU3hT7fUmuP+79DB0SIULREdfDqE7IkzeeLSEVrlvJYfXNStTIIUXduZDx0bgYhExaZD95fhIg34X4xe4OhyDKSrgM7y++9jeKvL08J0XvOtonmuPVwpb6KhitzSl5O33LzByvJXWy+teLHH8NB05k+xVa359Fx24VwDj+AV1P641OF4hRVeS6njcFkcI8YQpm7HjPII3bnBZIKXbR6dUDYx+mU+C06LiyDpPDxdp8gSQyzvMLk7mPBfeEtcCO0Bll5cDVtHFUIhQyWSbNFUCupTU8EzxCZN3LDVM3IIgGW4CKgcRHRCx0wNLIZDZyETINlib6ERUBFADmwC8Ms+UP2gfTdwCuY9RvOy54XJ2SHUjlyhOCBEjued2b1+IW2UO2VCT6BEsUpNOKKcVVxgQfyDamkRHDYz+2aMG5rQK1Xc4B5e4AXFZQ5QKhrL39lZLOREJOSHOK4OE++jDb4XYh2l6wggFjQVFQ6vj86WKAIx5Q63t7SZbPtJdhvHAhFE5c4xHDDFewLaZtAzVei+wku6tSPVi9vSNe+6Xmzibq47f/l1Z1+PcD3bKW4ToXlyB/1dw3URrGy4ALlPwYr4/voa4RK2Hjf42N0jwzYMXAqjdnFxbK0lv63L0yuV9lFgb17cDffdd0DX6x6uh/+vW8936LG8Ff5ERW6uMH97V5jvcIfinvoTvWFzdfgPuTp8p8kW18WfaLTN/d/6/d87tb24rb3Q9vvFph79v2WgYlN2o9rsprlN/8qspc/iSKXciP3xBaI/vqaX9T+QevE5Ss0rtJc6FVbvS0rPoa4FnWUlmUf3So6q63nOip5rLXnXqv0W1TpwR4L62d9oFm1T/w9r9SbK","sidebar_class_name":"get api-method","info_path":"docs/api/v2024/identity-security-cloud-v-2024-api","custom_edit_url":"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to \'List Non-Employee Records\' (list-non-employee-records)"},"sidebar":"isc_2024_sidebar","previous":{"title":"Create Non-Employee Record","permalink":"/docs/api/v2024/create-non-employee-record"},"next":{"title":"Get a Non-Employee Record","permalink":"/docs/api/v2024/get-non-employee-record"}}'),o=i("85893"),s=i("50065"),n=i("47936"),r=i("44039"),l=i.n(r),d=i("40218"),c=i.n(d),p=i("69141"),m=i.n(p);i("61142"),i("5525");var u=i("34403");let h={id:"list-non-employee-records",sidebar_label:"List Non-Employee Records",hide_title:!0,hide_table_of_contents:!0,api:"eJztXHtz2zYS/yoY9o/GGlGWZMm2NHMz5zpJ607S+Pxobs7JtBAJSUgogAHI2DqPv/vtLkCKtCS/knaanjrTRiGB3cU+fwsCvQ50KgzPpFZHcTAMEmmzX7R6MUsTPRfiRETaxDZoBlZEuZHZPBheXAe5FeYgz6bwl/c375tBxicWfgcwMyymsldyLKJ5lAj2mis+ETOhsgAGx8JGRqbIEhieTaVlE5FZxhkyZ3rMFJARBRnjRGixs6kwgnH4N7vULNIqE1dZzhMG0lg21oZlSEuoONVSZcN3irEOTcMRhk25hRFAUINIfjpy+13GaqiENUMjePx7k0nFLqcymrKIW4FT5vBLoZAVGXmS4B9IsCqubSHbboUtiASTeRTpXGVsRqowD2SyRB2e8MyNdpRaYJqUGz4TmTCWjCNRrZ9yYebwTsEbMutMZsFt3b/mV0zlsxFICcyMsHkCdsg0/Mxyo2App2CAi1932MHxETvNuIq5idmhThIRIQ12XLJ+/2yaZakdbm/H4rNI0KtalsuEbNGK9Gwb1LzNU7ltPZ0wKumEiyVskSVnGswsFfyckW/iMo34lEsjwEvHPLGiGYgrDnqB5XX7bXDQaCpmPBheB9k8xTUDXwGqhpmOjHu004UHM6nkLJ8FQ5g341fuN1GJxZiDFuhvNzfN1drU47EVy+p8Q49BbNAgWm6cg484rTJ40WLnFtw1mTObikiOpYjZpcymrEHWaaDiUz6RimfoEEbnk6lzWGeYb8YcX2CMUv3rlU9xtKT7ozFrZCYXDSYz0CooPtVpnjhVCtb4d3imM56Ehzi7gSpNtYLAm0LIg/uTHSjalsMBI+5S50nMRsJHBlhOjku7gf5Yw/lEg11ikpITBRqLwWJgM6kinAfLsJlUEwjvDEVhLiFg0E/5Z0hsDGxEysHxcpbyKGviaiCBYA6cQf6MgbHSGXqKFci1QUT+QStvoEwk7Wee5MJpAUePKBN5ab4JD8L1rHCikYbUzVVQ8ROaudZXrDaUFlfwWiJuMwPWqToo6pyHVuBaMph6U5Ew8An9F2DUtDo3kYD6edsrT4F/6Ui5ReujkxUKY3auMsjBbtIIvUr9ydb5DlUEcoVeyi1yEvcMPc/maYpKjH2BhawGZPQlvoYMlsR2CF4o4yarKoQVGmkuCt5YGuvfJrz4BSaQSZOlU61wVsZN9hx03cQq7n5EUJSBPRDSMeXMRiNYZ+6xTB5r7ppNC6mZ+MTeBd1o0Nlv7/d396N+dxDttjvwK+K740E76ux0dt4FS/Z+SQL8xS3utHTb5i+Lpw+zOiU9Bx21sUOk0GgU+ms0wCnEJzDUezSFS7UWld9tt/GPutZqqNHBPaZHH0ByNCUhNcj4MI2naSIjyh/bHyzOvV42LDeGo0/ITMxs5bmjiHDJoNyZdBLJ+M4ccH5+9HzJzKsEljGmtIUvifHO/njQ2+ntiUGvv9sd9Uej/V63x/u7O4O9eB89rxIyq4SoMz1xFQRdJgZ9ABQvQSW6f537wWg0b51CdZoinzL07udSXdr31gXtCvpvobZIPkPiRTA/mjZOXEG6lJpyw6Op0qw6xUsnbMsi5X/65xgxyIVSz6O50Kw6l36n23f/IFmf9u4njH1CYcej59RZYP2WFTNTtTcIEaxrcaotAQjjedXF+cBBwFgLFKasT49dppu45Nv3ZUbkGfOMr4o+HscSmfHkuBaHS2m5LthBOY3xDMaM8sw3fbymDgDZKSqs02ZRbjM9qw5HrAVgCEQQ9RXdzkgHOXJDOVB7RVW6M1HAekWYSYiDO7OFkxNbYVftGM67pd12ZxC298Puzllnf9jvDvuDVme3+x+KCVcWv7IkCCVXydFtr5OjKMZPFOTtVCjf2lBSY5fc54OC8MNV4gHC15TEk7xLhl57uNNv7e2hDCAExCkNWto6gbc3OKC3qvAdJhLV/8IY8OOQnVR6i6pIIx3PsSpLRYmh9YSiuKb4xSKDbHmo4wdkwJdSiXBiuEQJBYkcwUQGFD/LGJEBYXxHsti8oHF1PYImWh32A4+Zr2gAd9xiUI+GRx+B1kNy1bmSMJ8VUyBLlWhlBVuxJ/hotz3o9sa7Pc67+73OXn80GPOdnfagPxiQVwtrIZPaFWiizvpHoQArRSzREVjkv6AQ8BjQPQlAzB8OQIjGA/SPhcKNLZfp5WW4kwUAnP1weMx6exBIapLTcz65pQQVnp8iXs6ThI+KTguLOBF+Y+REqlWiCIUN+kXw/MXLg/NXZ/Dk5MW/zl+cwi+ktbSrd6DAW2N0S03N9FRfksR+ARhkViA2hShjDU+1AQviylYHSvc3OwfgM2O+64MZnvuKGVXSbGygAFRDqdj2eyZbotWEYoAph2fRlI04tMhMu2TQOIgikWbhK6/Jht8n2GqxSiGiNhvL77ysKgjn3dYPhLKgbQWdZ9iFy+hWel2osm6NRTJ5VTUKBgdIfr+fHES0KVrsbpbhUHqLF9HbB2R2mqtLd3YrJVLfAq1ERBtYkNkA9kJmgrVJaHR8OqLWARKPKsaVGauaIyndvXbCPM80vYt4bh8Qd8cJpJ+Qlla++Cx88NHOpctGZI3CTD4j+U05muxHleYqAt81N5vY3cTuJnYfGLu3X574dt+/JejTWYY+54rnoF9DxXMJ+hjyHqVZMYjgjTdkk4FCPET6+e0ZBPZHwHD45ecqxT2fr4iPXClfbg9Ke/h9nGKbpyj9C1uggKRHt4IxZCIRD0nuhcQOJJKqdpa5vdRmJMFB1QqISF+Y5jqnz2ImV4o2mG2TQedn1feZ31qGiLDWZUD3hSx0u0YbJLlBkptqtKlGf5tqtEGSm9jdxO63Gbt3IslSKooWj5NsPptxM3ee5t+7HXQYsPjGX4Ycmeo2WkFirMRYQR05BKNuZ9QZ70WiF/NevLszGHej3S7v73X2OqNedy+o1vqLRRyXQVaPqYq9nR1JxbS7b1iuwLlspnVc3/7L8RvymE45ZQtIDLYDAHfzvsSO3cEydjzTGk9fzQuEZGsYUi10hDkNxs5wrCnGwgDOJpAXFZ5NkCAXupKcCaCCn8QZHYDA4MVVAF0zDw/G+AXUH6uQxd6q5yJVlOQgIWWCRCNq1uBYEs8ojBHzAQVCsBPIzl8RnXoTfRGSZye44le4YvbiKhICA71E7v1V+7tHILzBHHHqDLxmo9d1O1yBA0BD4HJWiTs3+HyDzzc1flPj/x41foPPN7G7id1vM3Yfgc89GlqPz2HAg/E5jG21WYmlXtLBzz8bplOoeAnIvZmOotzQdnOBwQlXgCuhQBM6H55yvCMRbFdPqISmcqcCYaGTKDcJjCyO+F2DocBANy2eylZxEEjpSzrn97nb7vZWZB48IuCiDHJXnLsDhHiw0PFpkYaNRCd2GY94OH3747RBeaLwTvp4agsNOdc55Dgi02Tg8N6h6DFImkI38b31Z7xu6JTurWXC8s5NcvOAJf2KI+5ajSO1ZjWr9HgnOxjPQNZbi8RFvF/chTlF8O24L27ELCoJdmp4wP0qjKVNEz53x+SCY7A5paYDty9/hh8wlqR5g+S67AfBDbQO7iPHs5/fnm2xCWJSygnugKmQ2ERAVF2kBeVyx59mHR+cbd1/fDTWkaXzoyi3oOxArcZ3Bb+QhwWD0DEIicEWo0q3uLBwUf9sQ83DONGXXyCDz3I1viEm7rDGK0Re2LuoLESOW3To/XiVWix9M+HW6kiSMukOAPeXdhQ7Ko7fnXprs8NE5zEdfDUiAVxQ1CGcAW5+QTMTXFlloTrK8YyVO/ReX6zl3G5PRZJu40lzWCUSsNuQ8sVVa5rNki32DH5BMZtJ1WQ/wUhwkY9NJrKotYUwJ8YTvfASbw9gaXTcKcXSShdH/tet5gTqM0XVQU3hT7fUmuP+79DB0SIULREdfDqE7IkzeeLSEVrlvJYfXNStTIIUXduZDx0bgYhExaZD95fhIg34X4xe4OhyDKSrgM7y++9jeKvL08J0XvOtonmuPVwpb6KhitzSl5O33LzByvJXWy+teLHH8NB05k+xVa359Fx24VwDj+AV1P641OF4hRVeS6njcFkcI8YQpm7HjPII3bnBZIKXbR6dUDYx+mU+C06LiyDpPDxdp8gSQyzvMLk7mPBfeEtcCO0Bll5cDVtHFUIhQyWSbNFUCupTU8EzxCZN3LDVM3IIgGW4CKgcRHRCx0wNLIZDZyETINlib6ERUBFADmwC8Ms+UP2gfTdwCuY9RvOy54XJ2SHUjlyhOCBEjued2b1+IW2UO2VCT6BEsUpNOKKcVVxgQfyDamkRHDYz+2aMG5rQK1Xc4B5e4AXFZQ5QKhrL39lZLOREJOSHOK4OE++jDb4XYh2l6wggFjQVFQ6vj86WKAIx5Q63t7SZbPtJdhvHAhFE5c4xHDDFewLaZtAzVei+wku6tSPVi9vSNe+6Xmzibq47f/l1Z1+PcD3bKW4ToXlyB/1dw3URrGy4ALlPwYr4/voa4RK2Hjf42N0jwzYMXAqjdnFxbK0lv63L0yuV9lFgb17cDffdd0DX6x6uh/+vW8936LG8Ff5ERW6uMH97V5jvcIfinvoTvWFzdfgPuTp8p8kW18WfaLTN/d/6/d87tb24rb3Q9vvFph79v2WgYlN2o9rsprlN/8qspc/iSKXciP3xBaI/vqaX9T+QevE5Ss0rtJc6FVbvS0rPoa4FnWUlmUf3So6q63nOip5rLXnXqv0W1TpwR4L62d9oFm1T/w9r9SbK",sidebar_class_name:"get api-method",info_path:"docs/api/v2024/identity-security-cloud-v-2024-api",custom_edit_url:"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to 'List Non-Employee Records' (list-non-employee-records)"},g=void 0,y={},f=[];function x(e){let t={code:"code",li:"li",ol:"ol",p:"p",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(u.default,{as:"h1",className:"openapi__heading",children:"List Non-Employee Records"}),"\n",(0,o.jsx)(n.Z,{method:"get",path:"/non-employee-records",context:"endpoint"}),"\n",(0,o.jsx)(t.p,{children:"This gets a list of non-employee records. There are two contextual uses for this endpoint:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["The user has the role context of ",(0,o.jsx)(t.code,{children:"idn:nesr:read"}),", in which case they can get a list of all of the non-employees."]}),"\n",(0,o.jsx)(t.li,{children:"The user is an account manager, in which case they can get a list of the non-employees that they manage."}),"\n"]}),"\n",(0,o.jsx)(u.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,o.jsx)(l(),{parameters:[{in:"query",name:"limit",description:"Max number of results to return.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.",required:!1,example:250,schema:{type:"integer",format:"int32",minimum:0,maximum:250,default:250}},{in:"query",name:"offset",description:"Offset into the full result set. Usually specified with *limit* to paginate through the results.\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.",required:!1,example:0,schema:{type:"integer",format:"int32",minimum:0,default:0}},{in:"query",name:"count",description:"If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.\n\nSince requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.\n\nSee [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.",required:!1,example:!0,schema:{type:"boolean",default:!1}},{in:"query",name:"sorters",required:!1,schema:{type:"string",format:"comma-separated"},example:"accountName,sourceId",description:"Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **id, accountName, sourceId, manager, firstName, lastName, email, phone, startDate, endDate, created, modified**"},{in:"query",name:"filters",required:!1,schema:{type:"string"},example:'sourceId eq "2c91808568c529c60168cca6f90c1313"',description:"Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**sourceId**: *eq*"}]}),"\n",(0,o.jsx)(c(),{title:"Body",body:void 0}),"\n",(0,o.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"Non-Employee record objects",content:{"application/json":{schema:{type:"array",items:{type:"object",properties:{id:{type:"string",format:"UUID",description:"Non-Employee record id.",example:"ef38f94347e94562b5bb8424a56397d8"},accountName:{type:"string",description:"Requested identity account name.",example:"Abby.Smith"},firstName:{type:"string",description:"Non-Employee's first name.",example:"William"},lastName:{type:"string",description:"Non-Employee's last name.",example:"Smith"},email:{type:"string",description:"Non-Employee's email.",example:"william.smith@example.com"},phone:{type:"string",description:"Non-Employee's phone.",example:"5125555555"},manager:{type:"string",description:"The account ID of a valid identity to serve as this non-employee's manager.",example:"jane.doe"},sourceId:{type:"string",description:"Non-Employee's source id.",example:"2c91808568c529c60168cca6f90c1313"},data:{type:"object",additionalProperties:{type:"string"},description:"Additional attributes for a non-employee. Up to 10 custom attributes can be added.",example:{description:"Auditing"}},startDate:{type:"string",format:"date-time",description:"Non-Employee employment start date.",example:"2019-08-23T18:52:59.162Z"},endDate:{type:"string",format:"date-time",description:"Non-Employee employment end date.",example:"2020-08-23T18:52:59.162Z"},modified:{type:"string",format:"date-time",description:"When the request was last modified.",example:"2019-08-23T18:52:59.162Z"},created:{type:"string",format:"date-time",description:"When the request was created.",example:"2019-08-23T18:40:35.772Z"}},title:"NonEmployeeRecord"}}}}},400:{description:"Client Error - Returned if the request body is invalid.",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"}}}},401:{description:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",content:{"application/json":{schema:{type:"object",properties:{error:{description:"A message describing the error",example:"JWT validation failed: JWT is expired"}}}}}},403:{description:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"},examples:{403:{summary:"An example of a 403 response object",value:{detailCode:"403 Forbidden",trackingId:"b21b1f7ce4da4d639f2c62a57171b427",messages:[{locale:"en-US",localeOrigin:"DEFAULT",text:"The server understood the request but refuses to authorize it."}]}}}}}},429:{description:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",content:{"application/json":{schema:{type:"object",properties:{message:{description:"A message describing the error",example:" Rate Limit Exceeded "}}}}}},500:{description:"Internal Server Error - Returned if there is an unexpected error.",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"},examples:{500:{summary:"An example of a 500 response object",value:{detailCode:"500.0 Internal Fault",trackingId:"b21b1f7ce4da4d639f2c62a57171b427",messages:[{locale:"en-US",localeOrigin:"DEFAULT",text:"An internal fault occurred."}]}}}}}}}})]})}function b(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(x,{...e})}):x(e)}}}]);