"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["74060"],{94080:function(e,t,i){i.r(t),i.d(t,{metadata:()=>s,contentTitle:()=>u,default:()=>x,assets:()=>y,toc:()=>b,frontMatter:()=>h});var s=JSON.parse('{"id":"api/beta/list-seds","title":"list-seds","description":"<Heading","source":"@site/docs/api/beta/list-seds.api.mdx","sourceDirName":"api/beta","slug":"/api/beta/list-seds","permalink":"/docs/api/beta/list-seds","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to \'List Suggested Entitlement Descriptions\' (list-seds)","tags":[],"version":"current","frontMatter":{"id":"list-seds","sidebar_label":"List Suggested Entitlement Descriptions","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"get api-method","info_path":"docs/api/beta/identity-security-cloud-beta-api","custom_edit_url":"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to \'List Suggested Entitlement Descriptions\' (list-seds)"},"sidebar":"isc_beta_sidebar","previous":{"title":"Submit Sed Assignment Request","permalink":"/docs/api/beta/submit-sed-assignment"},"next":{"title":"Patch Suggested Entitlement Description","permalink":"/docs/api/beta/patch-sed"}}'),a=i("85893"),n=i("50065"),o=i("47936"),r=i("44039"),l=i.n(r),d=i("40218"),c=i.n(d),p=i("69141"),m=i.n(p);i("61142"),i("5525");var g=i("34403");let h={id:"list-seds",sidebar_label:"List Suggested Entitlement Descriptions",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"docs/api/beta/identity-security-cloud-beta-api",custom_edit_url:"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to 'List Suggested Entitlement Descriptions' (list-seds)"},u=void 0,y={},b=[];function f(e){let t={p:"p",strong:"strong",...(0,n.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(g.default,{as:"h1",className:"openapi__heading",children:"List Suggested Entitlement Descriptions"}),"\n",(0,a.jsx)(o.Z,{method:"get",path:"/suggested-entitlement-descriptions",context:"endpoint"}),"\n",(0,a.jsx)(t.p,{children:"List of Suggested Entitlement Descriptions (SED)"}),"\n",(0,a.jsx)(t.p,{children:"SED field descriptions:"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"batchId"}),": the ID of the batch of entitlements that are submitted for description generation"]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"displayName"}),": the display name of the entitlement that we are generating a description for"]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"sourceName"}),": the name of the source associated with the entitlement that we are generating the description for"]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"sourceId"}),": the ID of the source associated with the entitlement that we are generating the description for"]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"status"}),': the status of the suggested entitlement description, valid status options: "requested", "suggested", "not_suggested", "failed", "assigned", "approved", "denied"']}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"fullText"}),": will filter suggested entitlement description records by text found in any of the following fields: entitlement name, entitlement display name, suggested description, source name"]}),"\n",(0,a.jsx)(g.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsx)(l(),{parameters:[{description:"Integer specifying the maximum number of records to return in a single API call. \nThe standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results). If it is not specified, a default limit is used.",schema:{format:"int64",type:"integer"},in:"query",name:"limit",example:"limit=25"},{description:"Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\nFiltering is supported for the following fields and operators:\n\n**batchId**: *eq, ne*\n\n**displayName**: *eq, ne, co*\n\n**sourceName**: *eq, ne, co*\n\n**sourceId**: *eq, ne*\n\n**status**: *eq, ne*\n\n**fullText**: *co*",in:"query",name:"filters",example:'displayName co "Read and Write"',schema:{type:"string"}},{description:"Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\nSorting is supported for the following fields: **displayName, sourceName, status**",in:"query",name:"sorters",example:"sorters=displayName",schema:{type:"string"}},{description:"If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored. \nThe standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results).\nSince requesting a total count can have a performance impact, it is recommended not to send `count=true` if that value will not be used.",in:"query",name:"count",example:"count=true",schema:{type:"boolean"}},{description:"If `true` it will populate the `X-Total-Count` response header with the number of results that would be returned if `limit` and `offset` were ignored.\nThis parameter differs from the Coun parameter in that this one skip executing the actual query and always return an empty array.",in:"query",name:"count-only",example:"count-only=true",schema:{type:"boolean"}},{description:"By default, the ListSeds API will only return items that you have requested to be generated.  \nThis option will allow you to see all items that have been requested",in:"query",name:"requested-by-anyone",example:"requested-by-anyone=true",schema:{type:"boolean"}},{description:'Will limit records to items that are in "suggested" or "approved" status',in:"query",name:"show-pending-status-only",example:"show-pending-status-only=true",schema:{type:"boolean"}}]}),"\n",(0,a.jsx)(c(),{title:"Body",body:void 0}),"\n",(0,a.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"List of Suggested Entitlement Details",content:{"application/json":{schema:{items:{description:"Suggested Entitlement Description",type:"object",properties:{Name:{type:"string",description:"name of the entitlement",example:"BatchInvoiceProcessing"},approved_by:{type:"string",description:"entitlement approved by",example:"2c918086-76de-afbf-0176-f6d28f65565a"},approved_type:{type:"string",description:"entitlement approved type",example:"admin"},approved_when:{format:"date-time",type:"string",example:"2024-03-22 16:32:16.308857",description:"entitlement approved then"},attribute:{type:"string",description:"entitlement attribute",example:"Role"},description:{type:"string",description:"description of entitlement",example:"This entitlement allows automated processing of invoices in batches on a scheduled basis to streamline accounts payable procedures."},displayName:{type:"string",description:"entitlement display name",example:"AWS-Cloud-Billing"},id:{format:"uuid",type:"string",description:"sed id",example:"ead281ee-12a9-40ac-9534-36b5d7d65d53"},sourceId:{type:"string",description:"entitlement source id",example:"103f567b93ee49b991c40f9412f87643"},sourceName:{type:"string",description:"entitlement source name",example:"IDN Salesforce"},status:{type:"string",description:"entitlement status",example:"suggested"},suggestedDescription:{type:"string",description:"llm suggested entitlement description",example:"This entitlement allows automated processing of invoices in batches on a scheduled basis to streamline accounts payable"},type:{type:"string",description:"entitlement type",example:"group"},value:{type:"string",description:"entitlement value",example:"group"}},title:"Sed"},type:"array"}}}},400:{description:"Client Error - Returned if the request body is invalid.",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"}}}},401:{description:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",content:{"application/json":{schema:{type:"object",properties:{error:{description:"A message describing the error",example:"JWT validation failed: JWT is expired"}}}}}},403:{description:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"},examples:{403:{summary:"An example of a 403 response object",value:{detailCode:"403 Forbidden",trackingId:"b21b1f7ce4da4d639f2c62a57171b427",messages:[{locale:"en-US",localeOrigin:"DEFAULT",text:"The server understood the request but refuses to authorize it."}]}}}}}},404:{description:"Not Found - returned if the request URL refers to a resource or object that does not exist",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"},examples:{404:{summary:"An example of a 404 response object",value:{detailCode:"404 Not found",trackingId:"b21b1f7ce4da4d639f2c62a57171b427",messages:[{locale:"en-US",localeOrigin:"DEFAULT",text:"The server did not find a current representation for the target resource."}]}}}}}},429:{description:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",content:{"application/json":{schema:{type:"object",properties:{message:{description:"A message describing the error",example:" Rate Limit Exceeded "}}}}}},500:{description:"Internal Server Error - Returned if there is an unexpected error.",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"},examples:{500:{summary:"An example of a 500 response object",value:{detailCode:"500.0 Internal Fault",trackingId:"b21b1f7ce4da4d639f2c62a57171b427",messages:[{locale:"en-US",localeOrigin:"DEFAULT",text:"An internal fault occurred."}]}}}}}}}})]})}function x(e={}){let{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(f,{...e})}):f(e)}}}]);