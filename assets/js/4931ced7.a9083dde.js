"use strict";(self.webpackChunksailpoint_developer_portal=self.webpackChunksailpoint_developer_portal||[]).push([["54650"],{73044:function(e,t,i){i.r(t),i.d(t,{metadata:()=>r,contentTitle:()=>m,default:()=>T,assets:()=>y,toc:()=>f,frontMatter:()=>g});var r=JSON.parse('{"id":"api/v2024/search-count","title":"search-count","description":"<Heading","source":"@site/docs/api/v2024/search-count.api.mdx","sourceDirName":"api/v2024","slug":"/api/v2024/search-count","permalink":"/docs/api/v2024/search-count","draft":false,"unlisted":false,"editUrl":"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to \'Count Documents Satisfying a Query\' (search-count)","tags":[],"version":"current","frontMatter":{"id":"search-count","sidebar_label":"Count Documents Satisfying a Query","hide_title":true,"hide_table_of_contents":true,"api":"","sidebar_class_name":"post api-method","info_path":"docs/api/v2024/identity-security-cloud-v-2024-api","custom_edit_url":"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to \'Count Documents Satisfying a Query\' (search-count)"},"sidebar":"isc_2024_sidebar","previous":{"title":"Perform Search","permalink":"/docs/api/v2024/search-post"},"next":{"title":"Perform a Search Query Aggregation","permalink":"/docs/api/v2024/search-aggregate"}}'),a=i("85893"),n=i("50065"),s=i("47936"),o=i("44039"),l=i.n(o),c=i("40218"),d=i.n(c),p=i("69141"),u=i.n(p);i("61142"),i("5525");var h=i("34403");let g={id:"search-count",sidebar_label:"Count Documents Satisfying a Query",hide_title:!0,hide_table_of_contents:!0,api:"",sidebar_class_name:"post api-method",info_path:"docs/api/v2024/identity-security-cloud-v-2024-api",custom_edit_url:"https://github.com/sailpoint-oss/developer.sailpoint.com/issues/new?assignees=&labels=&template=bug-report.md&title=%5BBug%5D+Your+Bug+Report+Here Requesting changes to 'Count Documents Satisfying a Query' (search-count)"},m=void 0,y={},f=[];function b(e){let t={p:"p",...(0,n.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"Count Documents Satisfying a Query"}),"\n",(0,a.jsx)(s.Z,{method:"post",path:"/search/count",context:"endpoint"}),"\n",(0,a.jsx)(t.p,{children:"Performs a search with a provided query and returns the count of results in the X-Total-Count header."}),"\n",(0,a.jsx)(h.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,a.jsx)(l(),{parameters:void 0}),"\n",(0,a.jsx)(d(),{title:"Body",body:{content:{"application/json":{schema:{type:"object",properties:{indices:{description:"The names of the Elasticsearch indices in which to search. If none are provided, then all indices will be searched.",externalDocs:{description:"Learn more about search indices here.",url:"https://documentation.sailpoint.com/saas/help/search/searchable-fields.html"},type:"array",items:{description:"Enum representing the currently supported indices.\nAdditional values may be added in the future without notice.",type:"string",enum:["accessprofiles","accountactivities","entitlements","events","identities","roles","*"],example:"identities",title:"Index"},example:["identities"]},queryType:{description:"The type of query to use.  By default, the `SAILPOINT` query type is used, which requires the `query` object to be defined in the request body.\nTo use the `queryDsl` or `typeAheadQuery` objects in the request, you must set the type to `DSL` or `TYPEAHEAD` accordingly.\nAdditional values may be added in the future without notice.",type:"string",enum:["DSL","SAILPOINT","TEXT","TYPEAHEAD"],default:"SAILPOINT",example:"SAILPOINT",title:"QueryType"},queryVersion:{allOf:[{description:"The current Elasticserver version.",type:"string",default:"5.2",example:"5.2",title:"ElasticVersion"},{type:"string",description:"The version of the query object.\nThis version number will map to the version of Elasticsearch for the query strings and objects being used."}]},query:{type:"object",description:"Query parameters used to construct an Elasticsearch query object.",properties:{query:{description:"The query using the Elasticsearch [Query String Query](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string) syntax from the Query DSL extended by SailPoint to support Nested queries.",type:"string",example:"name:a*"},fields:{description:'The fields the query will be applied to.  Fields provide you with a simple way to add additional fields to search, without making the query too complicated.  For example, you can use the fields to specify that you want your query of "a*" to be applied to "name", "firstName", and the "source.name".  The response will include all results matching the "a*" query found in those three fields. \nA field\'s availability depends on the indices being searched.  For example, if you are searching "identities", you can apply your search to the "firstName" field, but you couldn\'t use "firstName" with a search on "access profiles".  Refer to the response schema for the respective lists of available fields. ',type:"string",example:["firstName,lastName,email"]},timeZone:{description:"The time zone to be applied to any range query related to dates.",type:"string",example:"America/Chicago"},innerHit:{description:"The innerHit query object returns a flattened list of results for the specified nested type.",type:"object",required:["query","type"],properties:{query:{description:"The search query using the Elasticsearch [Query String Query](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string) syntax from the Query DSL extended by SailPoint to support Nested queries.",type:"string",example:'source.name:\\"Active Directory\\"'},type:{description:'The nested type to use in the inner hits query.  The nested type [Nested Type](https://www.elastic.co/guide/en/elasticsearch/reference/current/nested.html) refers to a document "nested" within another document. For example, an identity can have nested documents for access, accounts, and apps.',type:"string",example:"access"}},title:"InnerHit"}},title:"Query"},queryDsl:{description:"The search query using the Elasticsearch [Query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.10/query-dsl.html) syntax.",type:"object",example:{match:{name:"john.doe"}}},textQuery:{type:"object",description:"Query parameters used to construct an Elasticsearch text query object.",required:["terms","fields"],properties:{terms:{description:"Words or characters that specify a particular thing to be searched for.",type:"array",items:{type:"string"},example:["The quick brown fox","3141592","7"]},fields:{description:"The fields to be searched.",type:"array",items:{type:"string"},example:["displayName","employeeNumber","roleCount"]},matchAny:{description:"Indicates that at least one of the terms must be found in the specified fields;  otherwise, all terms must be found.",type:"boolean",default:!1,example:!1},contains:{description:"Indicates that the terms can be located anywhere in the specified fields;  otherwise, the fields must begin with the terms.",type:"boolean",default:!1,example:!0}},title:"TextQuery"},typeAheadQuery:{type:"object",description:'Query parameters used to construct an Elasticsearch type ahead query object.  The typeAheadQuery performs a search for top values beginning with the typed values. For example, typing "Jo" results in top hits matching "Jo." Typing "Job" results in top hits matching "Job." ',required:["query","field"],properties:{query:{description:"The type ahead query string used to construct a phrase prefix match query.",type:"string",example:"Work"},field:{description:"The field on which to perform the type ahead search.",type:"string",example:"source.name"},nestedType:{description:"The nested type.",type:"string",example:"access"},maxExpansions:{description:"The number of suffixes the last term will be expanded into.\nInfluences the performance of the query and the number results returned.\nValid values: 1 to 1000.",type:"integer",format:"int32",minimum:1,maximum:1e3,default:10,example:10},size:{description:"The max amount of records the search will return.",type:"integer",format:"int32",minimum:1,default:100,example:100},sort:{description:"The sort order of the returned records.",type:"string",default:"desc",example:"asc"},sortByValue:{description:"The flag that defines the sort type, by count or value.",type:"boolean",default:!1,example:!0}},title:"TypeAheadQuery"},includeNested:{description:"Indicates whether nested objects from returned search results should be included.",type:"boolean",default:!0,example:!0},queryResultFilter:{type:"object",description:"Allows the query results to be filtered by specifying a list of fields to include and/or exclude from the result documents.",properties:{includes:{description:"The list of field names to include in the result documents.",type:"array",items:{type:"string"},example:["name","displayName"]},excludes:{description:"The list of field names to exclude from the result documents.",type:"array",items:{type:"string"},example:["stacktrace"]}},title:"QueryResultFilter"},aggregationType:{description:"Enum representing the currently available query languages for aggregations, which are used to perform calculations or groupings on search results.\n\nAdditional values may be added in the future without notice.\n",type:"string",enum:["DSL","SAILPOINT"],default:"DSL",example:"DSL",title:"AggregationType"},aggregationsVersion:{allOf:[{description:"The current Elasticserver version.",type:"string",default:"5.2",example:"5.2",title:"ElasticVersion"},{type:"string",description:"The version of the language being used for aggregation queries.\nThis version number will map to the version of Elasticsearch for the aggregation query object."}]},aggregationsDsl:{description:"The aggregation search query using Elasticsearch [Aggregations](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/search-aggregations.html) syntax.",type:"object",example:{}},aggregations:{description:"The aggregation\u2019s specifications, such as the groupings and calculations to be performed.\n",allOf:[{type:"object",properties:{nested:{type:"object",description:"The nested aggregation object.",required:["name","type"],properties:{name:{description:"The name of the nested aggregate to be included in the result.",type:"string",example:"id"},type:{description:"The type of the nested object.",type:"string",example:"access"}},title:"NestedAggregation"},metric:{type:"object",description:"The calculation done on the results of the query",required:["name","field"],properties:{name:{description:"The name of the metric aggregate to be included in the result.\nIf the metric aggregation is omitted, the resulting aggregation will be a count of the documents in the search results.",type:"string",example:"Access Name Count"},type:{description:"Enum representing the currently supported metric aggregation types.\nAdditional values may be added in the future without notice.",type:"string",enum:["COUNT","UNIQUE_COUNT","AVG","SUM","MEDIAN","MIN","MAX"],default:"UNIQUE_COUNT",example:"COUNT",title:"MetricType"},field:{description:"The field the calculation is performed on.\n\nPrefix the field name with '@' to reference a nested object.\n",type:"string",example:"@access.name"}},title:"MetricAggregation"},filter:{type:"object",description:"An additional filter to constrain the results of the search query.",required:["name","field","value"],properties:{name:{description:"The name of the filter aggregate to be included in the result.",type:"string",example:"Entitlements"},type:{description:"Enum representing the currently supported filter aggregation types.\nAdditional values may be added in the future without notice.",type:"string",enum:["TERM"],default:"TERM",example:"TERM",title:"SearchFilterType"},field:{description:"The search field to apply the filter to.\n\nPrefix the field name with '@' to reference a nested object.\n",type:"string",example:"access.type"},value:{description:"The value to filter on.",type:"string",example:"ENTITLEMENT"}},title:"FilterAggregation"},bucket:{type:"object",description:"The bucket to group the results of the aggregation query by.",required:["name","field"],properties:{name:{description:"The name of the bucket aggregate to be included in the result.",type:"string",example:"Identity Locations"},type:{description:"Enum representing the currently supported bucket aggregation types.\nAdditional values may be added in the future without notice.",type:"string",enum:["TERMS"],default:"TERMS",example:"TERMS",title:"BucketType"},field:{description:"The field to bucket on.\nPrefix the field name with '@' to reference a nested object.",type:"string",example:"attributes.city"},size:{description:"Maximum number of buckets to include.",type:"integer",format:"int32",example:100},minDocCount:{description:"Minimum number of documents a bucket should have.",type:"integer",format:"int32",example:2}},title:"BucketAggregation"}},title:"Aggregations"},{type:"object",properties:{subAggregation:{description:"Aggregation to be performed on the result of the parent bucket aggregation.",allOf:[{type:"object",properties:{nested:{type:"object",description:"The nested aggregation object.",required:["name","type"],properties:{name:{description:"The name of the nested aggregate to be included in the result.",type:"string",example:"id"},type:{description:"The type of the nested object.",type:"string",example:"access"}},title:"NestedAggregation"},metric:{type:"object",description:"The calculation done on the results of the query",required:["name","field"],properties:{name:{description:"The name of the metric aggregate to be included in the result.\nIf the metric aggregation is omitted, the resulting aggregation will be a count of the documents in the search results.",type:"string",example:"Access Name Count"},type:{description:"Enum representing the currently supported metric aggregation types.\nAdditional values may be added in the future without notice.",type:"string",enum:["COUNT","UNIQUE_COUNT","AVG","SUM","MEDIAN","MIN","MAX"],default:"UNIQUE_COUNT",example:"COUNT",title:"MetricType"},field:{description:"The field the calculation is performed on.\n\nPrefix the field name with '@' to reference a nested object.\n",type:"string",example:"@access.name"}},title:"MetricAggregation"},filter:{type:"object",description:"An additional filter to constrain the results of the search query.",required:["name","field","value"],properties:{name:{description:"The name of the filter aggregate to be included in the result.",type:"string",example:"Entitlements"},type:{description:"Enum representing the currently supported filter aggregation types.\nAdditional values may be added in the future without notice.",type:"string",enum:["TERM"],default:"TERM",example:"TERM",title:"SearchFilterType"},field:{description:"The search field to apply the filter to.\n\nPrefix the field name with '@' to reference a nested object.\n",type:"string",example:"access.type"},value:{description:"The value to filter on.",type:"string",example:"ENTITLEMENT"}},title:"FilterAggregation"},bucket:{type:"object",description:"The bucket to group the results of the aggregation query by.",required:["name","field"],properties:{name:{description:"The name of the bucket aggregate to be included in the result.",type:"string",example:"Identity Locations"},type:{description:"Enum representing the currently supported bucket aggregation types.\nAdditional values may be added in the future without notice.",type:"string",enum:["TERMS"],default:"TERMS",example:"TERMS",title:"BucketType"},field:{description:"The field to bucket on.\nPrefix the field name with '@' to reference a nested object.",type:"string",example:"attributes.city"},size:{description:"Maximum number of buckets to include.",type:"integer",format:"int32",example:100},minDocCount:{description:"Minimum number of documents a bucket should have.",type:"integer",format:"int32",example:2}},title:"BucketAggregation"}},title:"Aggregations"},{type:"object",properties:{subAggregation:{type:"object",properties:{nested:{type:"object",description:"The nested aggregation object.",required:["name","type"],properties:{name:{description:"The name of the nested aggregate to be included in the result.",type:"string",example:"id"},type:{description:"The type of the nested object.",type:"string",example:"access"}},title:"NestedAggregation"},metric:{type:"object",description:"The calculation done on the results of the query",required:["name","field"],properties:{name:{description:"The name of the metric aggregate to be included in the result.\nIf the metric aggregation is omitted, the resulting aggregation will be a count of the documents in the search results.",type:"string",example:"Access Name Count"},type:{description:"Enum representing the currently supported metric aggregation types.\nAdditional values may be added in the future without notice.",type:"string",enum:["COUNT","UNIQUE_COUNT","AVG","SUM","MEDIAN","MIN","MAX"],default:"UNIQUE_COUNT",example:"COUNT",title:"MetricType"},field:{description:"The field the calculation is performed on.\n\nPrefix the field name with '@' to reference a nested object.\n",type:"string",example:"@access.name"}},title:"MetricAggregation"},filter:{type:"object",description:"An additional filter to constrain the results of the search query.",required:["name","field","value"],properties:{name:{description:"The name of the filter aggregate to be included in the result.",type:"string",example:"Entitlements"},type:{description:"Enum representing the currently supported filter aggregation types.\nAdditional values may be added in the future without notice.",type:"string",enum:["TERM"],default:"TERM",example:"TERM",title:"SearchFilterType"},field:{description:"The search field to apply the filter to.\n\nPrefix the field name with '@' to reference a nested object.\n",type:"string",example:"access.type"},value:{description:"The value to filter on.",type:"string",example:"ENTITLEMENT"}},title:"FilterAggregation"},bucket:{type:"object",description:"The bucket to group the results of the aggregation query by.",required:["name","field"],properties:{name:{description:"The name of the bucket aggregate to be included in the result.",type:"string",example:"Identity Locations"},type:{description:"Enum representing the currently supported bucket aggregation types.\nAdditional values may be added in the future without notice.",type:"string",enum:["TERMS"],default:"TERMS",example:"TERMS",title:"BucketType"},field:{description:"The field to bucket on.\nPrefix the field name with '@' to reference a nested object.",type:"string",example:"attributes.city"},size:{description:"Maximum number of buckets to include.",type:"integer",format:"int32",example:100},minDocCount:{description:"Minimum number of documents a bucket should have.",type:"integer",format:"int32",example:2}},title:"BucketAggregation"}},title:"Aggregations",description:"Aggregation to be performed on the result of the parent bucket aggregation."}}}],title:"SubSearchAggregationSpecification"}}}],title:"SearchAggregationSpecification"},sort:{description:"The fields to be used to sort the search results. Use + or - to specify the sort direction.",type:"array",items:{type:"string"},example:["displayName","+id"]},searchAfter:{description:'Used to begin the search window at the values specified.\nThis parameter consists of the last values of the sorted fields in the current record set.\nThis is used to expand the Elasticsearch limit of 10K records by shifting the 10K window to begin at this value.\nIt is recommended that you always include the ID of the object in addition to any other fields on this parameter in order to ensure you don\'t get duplicate results while paging.\nFor example, when searching for identities, if you are sorting by displayName you will also want to include ID, for example ["displayName", "id"]. \nIf the last identity ID in the search result is 2c91808375d8e80a0175e1f88a575221 and the last displayName is "John Doe", then using that displayName and ID will start a new search after this identity.\nThe searchAfter value will look like ["John Doe","2c91808375d8e80a0175e1f88a575221"]',type:"array",items:{type:"string"},example:["John Doe","2c91808375d8e80a0175e1f88a575221"]},filters:{description:"The filters to be applied for each filtered field name.",type:"object",additionalProperties:{type:"object",properties:{type:{description:"Enum representing the currently supported filter types.\nAdditional values may be added in the future without notice.",type:"string",enum:["EXISTS","RANGE","TERMS"],example:"RANGE",title:"FilterType"},range:{type:"object",description:"The range of values to be filtered.",properties:{lower:{description:"The lower bound of the range.",type:"object",required:["value"],properties:{value:{description:"The value of the range's endpoint.",type:"string",example:"1"},inclusive:{description:"Indicates if the endpoint is included in the range.",type:"boolean",default:!1,example:!1}},title:"Bound"},upper:{description:"The upper bound of the range.",type:"object",required:["value"],properties:{value:{description:"The value of the range's endpoint.",type:"string",example:"1"},inclusive:{description:"Indicates if the endpoint is included in the range.",type:"boolean",default:!1,example:!1}},title:"Bound"}},title:"Range"},terms:{description:"The terms to be filtered.",type:"array",items:{type:"string",example:"account_count"}},exclude:{description:"Indicates if the filter excludes results.",type:"boolean",default:!1,example:!1}},title:"Filter"},example:{}}},title:"Search"},examples:{"query-timeZone":{summary:"Query with TimeZone",value:{indices:["identities"],query:{query:"created: [2022-05-19T19:26:03.351Z TO now]",timeZone:"America/Los_Angeles"}}}}}},required:!0}}),"\n",(0,a.jsx)(u(),{id:void 0,label:void 0,responses:{204:{description:"No content - indicates the request was successful but there is no content to be returned in the response.",headers:{"X-Total-Count":{description:"The total result count.",schema:{type:"integer"},example:5}}},400:{description:"Client Error - Returned if the request body is invalid.",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"}}}},401:{description:"Unauthorized - Returned if there is no authorization header, or if the JWT token is expired.",content:{"application/json":{schema:{type:"object",properties:{error:{description:"A message describing the error",example:"JWT validation failed: JWT is expired"}}}}}},403:{description:"Forbidden - Returned if the user you are running as, doesn't have access to this end-point.",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"},examples:{403:{summary:"An example of a 403 response object",value:{detailCode:"403 Forbidden",trackingId:"b21b1f7ce4da4d639f2c62a57171b427",messages:[{locale:"en-US",localeOrigin:"DEFAULT",text:"The server understood the request but refuses to authorize it."}]}}}}}},429:{description:"Too Many Requests - Returned in response to too many requests in a given period of time - rate limited. The Retry-After header in the response includes how long to wait before trying again.",content:{"application/json":{schema:{type:"object",properties:{message:{description:"A message describing the error",example:" Rate Limit Exceeded "}}}}}},500:{description:"Internal Server Error - Returned if there is an unexpected error.",content:{"application/json":{schema:{type:"object",properties:{detailCode:{type:"string",description:"Fine-grained error code providing more detail of the error.",example:"400.1 Bad Request Content"},trackingId:{type:"string",description:"Unique tracking id for the error.",example:"e7eab60924f64aa284175b9fa3309599"},messages:{type:"array",description:"Generic localized reason for error",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}},causes:{type:"array",description:"Plain-text descriptive reasons to provide additional detail to the text provided in the messages field",items:{type:"object",properties:{locale:{type:"string",description:"The locale for the message text, a BCP 47 language tag.",example:"en-US",nullable:!0},localeOrigin:{type:"string",enum:["DEFAULT","REQUEST",null],description:"An indicator of how the locale was selected. *DEFAULT* means the locale is the system default. *REQUEST* means the locale was selected from the request context (i.e., best match based on the *Accept-Language* header). Additional values may be added in the future without notice.",example:"DEFAULT",nullable:!0,title:"LocaleOrigin"},text:{type:"string",description:"Actual text of the error message in the indicated locale.",example:"The request was syntactically correct but its content is semantically invalid."}},title:"ErrorMessageDto"}}},title:"ErrorResponseDto"},examples:{500:{summary:"An example of a 500 response object",value:{detailCode:"500.0 Internal Fault",trackingId:"b21b1f7ce4da4d639f2c62a57171b427",messages:[{locale:"en-US",localeOrigin:"DEFAULT",text:"An internal fault occurred."}]}}}}}}}})]})}function T(e={}){let{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(b,{...e})}):b(e)}}}]);